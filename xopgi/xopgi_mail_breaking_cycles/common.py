#!/usr/bin/env python
# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------
# Copyright (c) Merchise Autrement [~ยบ/~] and Contributors
# All rights reserved.
#
# This is free software; you can do what the LICENCE file allows you to.
#

from __future__ import (division as _py3_division,
                        print_function as _py3_print,
                        absolute_import as _py3_abs_import)


DELIVERY_STATUS_NOTIFICATION = 'multipart/report; report-type=delivery-status'

MESSAGE_DISPOSITION_NOTIFICATION = \
    'multipart/report; report-type=disposition-notification'


def is_automatic_response(message):
    '''Check if the message seems to be auto-responded.

    Review RFC 3834, for better understanding this method.

    In the sense of this method "automatic response" include:

    - Any sort of message that is sent automatically in reply to a
      message. RFC 3834.

    - Any sort of message indicating the disposition of another message.
      Example is a notification of a message being read by any of its
      recipients.  RFC 3798.

    - Any sort of message indicating the status of a message delivery by the
      message transport system. Example is a bounce for no valid address given.
      RFC 3464

    '''
    how = message.get('Auto-Submitted', '').lower()
    content_type = message.get('Content-Type', '')
    if how.startswith('auto-replied'):
        return True
    elif how.startswith('auto-generated'):
        # Used on messages generated by automatic(often periodic) processes.
        return True
    elif message['X-Autoreply'] == 'yes' and 'In-Reply-To' in message:
        # Some MTAs also include this, but I will refuse them unless an
        # In-Reply-To is provided.
        return True
    elif content_type.startswith(DELIVERY_STATUS_NOTIFICATION):
        return True
    elif content_type.startswith(MESSAGE_DISPOSITION_NOTIFICATION):
        return True
    return False
